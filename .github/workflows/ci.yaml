name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ '**' ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ci-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (black/isort/flake8) on Python 3.12
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: backend/pyproject.toml
      - name: Install dev deps
        working-directory: backend
        run: |
          python -m pip install -U pip
          pip install -e .[dev]
      - name: Black (check)
        working-directory: backend
        run: black --check .
      - name: isort (check)
        working-directory: backend
        run: isort --check-only --diff .
      - name: flake8
        working-directory: backend
        run: flake8 .

  typecheck:
    name: Type check (mypy) on Python 3.12
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: backend/pyproject.toml
      - name: Install project + dev deps
        working-directory: backend
        run: |
          python -m pip install -U pip
          pip install -e .[dev]
      - name: Run mypy
        working-directory: backend
        run: mypy --config-file=pyproject.toml

  unit-tests:
    name: Unit tests + coverage on Python 3.12
    runs-on: ubuntu-latest
    needs: [ lint, typecheck ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
          cache-dependency-path: backend/pyproject.toml
      - name: Install project + dev deps
        working-directory: backend
        run: |
          python -m pip install -U pip
          pip install -e .[dev]
      - name: Run tests with coverage
        working-directory: backend
        run: |
          pytest -q --maxfail=1 --disable-warnings \
            -m "not integration and not e2e and not perf" \
            --cov=app --cov-report=term-missing \
            --cov-report=xml:coverage.xml --cov-fail-under=60
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-python312
          path: backend/coverage.xml
          if-no-files-found: warn
